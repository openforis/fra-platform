name: Run yarn test

on:
  push:
    branches-ignore:
      - 'master'
      - 'production'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.12.1]
        redis-version: [6]

    services:
      postgres:
        image: postgis/postgis:12-3.0
        env:
          POSTGRES_USER: frap
          POSTGRES_PASSWORD: frap
          POSTGRES_DB: frap-dev
        ports:
          - 5442:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 18.12.1
        uses: actions/setup-node@v2
        with:
          node-version: '18.12.1'
          always-auth: true
          auth-token: ${{secrets.ACCESS_TOKEN}}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@openforis'

      - name: Use Redis
        uses: supercharge/redis-github-action@1.5.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - run: yarn install --network-timeout 1000000
        env:
            NODE_AUTH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
#      - run: yarn run-migrations
#        env:
#          PGHOST: localhost
#          PGPORT: 5442
#          PGDATABASE: frap-dev
#          PGUSER: frap
#          PGPASSWORD: frap
#     Migrations are run on yarn build
      - run: yarn build
        env:
          PGHOST: localhost
          PGPORT: 5442
          PGDATABASE: frap-dev
          PGUSER: frap
          PGPASSWORD: frap
      - run: yarn test
        env:
          PGHOST: localhost
          PGPORT: 5442
          PGDATABASE: frap-dev
          PGUSER: frap
          PGPASSWORD: frap
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
